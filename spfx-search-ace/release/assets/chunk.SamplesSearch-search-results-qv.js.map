{"version":3,"sources":["webpack:///.././src/adaptiveCardExtensions/samplesSearch/quickView/SearchResultsQuickView.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA4H;AACvD;AAerE;IAA4C,0CAI3C;IAJD;;IA8CA,CAAC;IAtCC,sBAAW,wCAAI;aAAf;YAAA,iBAkBC;YAjBC,IAAM,WAAW,GAAY,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YAC9E,kDAAkD;YAClD,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC;oBACnC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC;oBAC/C,OAAO;gBACT,CAAC,CAAC;qBACD,KAAK,CAAC,cAAQ,OAAO,EAAC,CAAC,CAAC;aAC1B;YAED,OAAO;gBACL,iBAAiB,EAAE,sFAAoB;gBACvC,WAAW,EAAE,qFAAmB;gBAChC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE;gBACzC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;gBACvC,SAAS,EAAE,WAAW;aACvB,CAAC;QACJ,CAAC;;;OAAA;IAED,sBAAW,4CAAQ;aAAnB;YACE,OAAO,mBAAO,CAAC,4DAAgD,CAAC,CAAC;QACnE,CAAC;;;OAAA;IAEM,yCAAQ,GAAf,UAAgB,MAAwB;QACtC,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;YAC5C,OAAO;SACR;QAEC,QAAI,GACF,MAAM,KADJ,CACK;QACX,IAAI,IAAI,CAAC,EAAE,KAAK,QAAQ,EAAE;YACxB,sBAAsB;YACtB,IAAI,CAAC,QAAQ,CAAC;gBACZ,WAAW,EAAE,IAAI,CAAC,WAAW;aAC9B,CAAC,CAAC;SACJ;IACH,CAAC;IACH,6BAAC;AAAD,CAAC,CA9C2C,oGAAyB,GA8CpE","file":"chunk.SamplesSearch-search-results-qv.js","sourcesContent":["import { ISPFxAdaptiveCard, BaseAdaptiveCardQuickView, IActionArguments } from '@microsoft/sp-adaptive-card-extension-base';\r\nimport * as strings from 'SamplesSearchAdaptiveCardExtensionStrings';\r\nimport {\r\n  ISamplesSearchAdaptiveCardExtensionProps,\r\n  ISamplesSearchAdaptiveCardExtensionState\r\n} from '../SamplesSearchAdaptiveCardExtension';\r\nimport { ISampleItem } from '../samplesSearchService/ISearchResults';\r\n\r\nexport interface ISearchResultsQuickViewData {\r\n  searchActionTitle: string;\r\n  placeholder: string;\r\n  queryString: string;\r\n  searchResults?: ISampleItem[];\r\n  isLoading: boolean;\r\n}\r\n\r\nexport class SearchResultsQuickView extends BaseAdaptiveCardQuickView<\r\n  ISamplesSearchAdaptiveCardExtensionProps,\r\n  ISamplesSearchAdaptiveCardExtensionState,\r\n  ISearchResultsQuickViewData\r\n> {\r\n\r\n  private _lastQueryString: string | undefined;\r\n\r\n  public get data(): ISearchResultsQuickViewData {\r\n    const isNewSearch: boolean = this._lastQueryString !== this.state.queryString;\r\n    // initiate search if the query string has changed\r\n    if (isNewSearch) {\r\n      this.properties.searchSamples().then(() => { \r\n        this._lastQueryString = this.state.queryString;\r\n        return; \r\n      })\r\n      .catch(() => { return;});\r\n    }\r\n    \r\n    return {\r\n      searchActionTitle: strings.SearchAction,\r\n      placeholder: strings.Placeholder,\r\n      queryString: this.state.queryString || '',\r\n      searchResults: this.state.searchResults,\r\n      isLoading: isNewSearch\r\n    };\r\n  }\r\n\r\n  public get template(): ISPFxAdaptiveCard {\r\n    return require('./template/SearchResultsQuickViewTemplate.json');\r\n  }\r\n\r\n  public onAction(action: IActionArguments): void {\r\n    if (action.type !== 'Submit' || !action.data) {\r\n      return;\r\n    }\r\n    const {\r\n      data\r\n    } = action;\r\n    if (data.id === 'search') {\r\n      // update query string\r\n      this.setState({\r\n        queryString: data.queryString\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}